The ``3-say_my_name`` module
============================

Using ``say_my_name(first_name, last_name="")``
-----------------------------------------------


Import the function that need to test:
	>>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:

	>>> say_my_name("John", "Smith")
	My name is John Smith

	>>> say_my_name("Walter", "White")
	My name is Walter White

	>>> say_my_name("Bob")
	My name is Bob 

	>>> say_my_name("John", "")
	My name is John 

	>>> say_my_name("", "John")
        My name is  John

Check number of arguments
=========================

	>>> say_my_name()
	Traceback (most recent call last):
	...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

	>>> say_my_name("John", "Smith", "aaaa")
	Traceback (most recent call last):
	...
	TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

	>>> sya_my_name(, "John")
	Traceback (most recent call last):
        ...
	SyntaxError: invalid syntax

Check arguments valid
=====================

	>>> say_my_name(12, "White")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

	>>> say_my_name("John", 12)
	Traceback (most recent call last):
	...
	TypeError: last_name must be a string

	>>> say_my_name(None, "John")
	Traceback (most recent call last):
        ...
	TypeError: first_name must be a string

	>>> say_my_name("John", None)
	Traceback (most recent call last):
        ...
	TypeError: last_name must be a string

	>>> say_my_name(12, 12)
	Traceback (most recent call last):
        ...
	TypeError: first_name must be a string

	>>> say_my_name(12)
	Traceback (most recent call last):
        ...
        TypeError: first_name must be a string
